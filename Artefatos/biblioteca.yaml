apiVersion: v1
kind: Pod
metadata:
  name: app-biblioteca
  namespace: biblioteca
spec:
  containers:
    - name: banco-dados
      image: alpine/postgres:16
      imagepullpolicy: IfNotPresent
      ports:
        - containerPort: 5432
      volumeMounts:
        - name: postgresdb
          mountPath: /var/lib/postgresql/data
      env:
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        - name: PGDATA
          value: /var/lib/postgresql/data/pgdata
        - name: POSTGRES_USER
          valueFrom:
            configMapKeyRef:
              name: postgres-config
              key: POSTGRES_USER
        - name: POSTGRES_DB
          valueFrom:
            configMapKeyRef:
              name: postgres-config
              key: POSTGRES_DB

#  - name: app-web
#    image: <imagem_da_aplicacao_python>:<tag_da_versao> 
#    - containerPort: 8000
#    env:
#    - name: DATABASE_URL
#      value: postgres://banco-dados:<senha_do_postgres>@banco-dados:5432
#  - name: logs
#    image: <imagem_do_servico_de_logs>
#    volumeMounts:
#    - name: logs
#      mountPath: /var/log
#  - name: nginx
#    image: nginx:latest
#    ports:
#    - containerPort: 80
#    volumeMounts:
#    - name: static
#      mountPath: /usr/share/nginx/html
  volumes:
    - name: postgresdb
      persistentVolumeClaim:
        claimName: postgres-pvc
    - name: logs
      emptyDir: {}
  - name: static
    secret:
      secretName: static-content
---
kind: Service
apiVersion: v1
metadata:
  name: postgres
spec:
  selector:
    app: postgres
  ports:
    - port: 5432
  type: ClusterIP
